SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 21-Jul-2013 15:17:12  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\InvisibleBasic\dConsole.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      dConsole.c     1    #include <fxlib.h>
      dConsole.c     2    #include <stdio.h>
      dConsole.c     3    #include <stdarg.h>
      dConsole.c     4    #include "dconsole.h"
      dConsole.c     5    
      dConsole.c     6    #define LINE_ROW_MAX    8
      dConsole.c     7    #define LINE_COL_MAX    21
      dConsole.c     8    
      dConsole.c     9    typedef unsigned int    uint;
      dConsole.c    10    typedef unsigned char   uchar;
      dConsole.c    11    
      dConsole.c    12    char    line_buf[LINE_ROW_MAX][LINE_COL_MAX+1];
      dConsole.c    13    int             line_index      = 0;
      dConsole.c    14    int             line_x          = 0;
      dConsole.c    15    int             line_start      = 0;
      dConsole.c    16    int             line_count      = 0;
      dConsole.c    17    
      dConsole.c    18    void dAreaClear (int left,int top,int right,int bottom,int sel) 
P   00000000              _dAreaClear:                     ; function: dAreaClear
                                                           ; frame size=28
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 4F22                   STS.L       PR,@-R15
    00000004 7FEC                   ADD         #-20,R15
      dConsole.c    19    { 
      dConsole.c    20            DISPBOX box; 
      dConsole.c    21            box.left = left;box.top = top;box.right = right;box.bottom = bottom; 
    00000006 1F41                   MOV.L       R4,@(4,R15)
    00000008 1F52                   MOV.L       R5,@(8,R15)
    0000000A 1F63                   MOV.L       R6,@(12,R15)
    0000000C 1F74                   MOV.L       R7,@(16,R15)
      dConsole.c    22            if (sel != 1) 
    0000000E 50F7                   MOV.L       @(28,R15),R0
    00000010 8801                   CMP/EQ      #1,R0
    00000012 8903                   BT          L444
      dConsole.c    23                    Bdisp_AreaClr_VRAM (&box); 
    00000014 D254                   MOV.L       L507,R2    ; _Bdisp_AreaClr_VRAM
    00000016 64F3                   MOV         R15,R4
    00000018 420B                   JSR         @R2
    0000001A 7404                   ADD         #4,R4
    0000001C              L444:                             
      dConsole.c    24            if (sel != 0){ 
    0000001C 53F7                   MOV.L       @(28,R15),R3
    0000001E 2338                   TST         R3,R3
    00000020 8918                   BT          L445
      dConsole.c    25                    Bdisp_DrawLineVRAM (box.left,box.top,box.right,box.top); 
    00000022 DE52                   MOV.L       L507+4,R14 ; _Bdisp_DrawLineVRAM
    00000024 57F2                   MOV.L       @(8,R15),R7
    00000026 2F72                   MOV.L       R7,@R15
    00000028 56F3                   MOV.L       @(12,R15),R6
    0000002A 6573                   MOV         R7,R5
    0000002C 4E0B                   JSR         @R14
    0000002E 54F1                   MOV.L       @(4,R15),R4
      dConsole.c    26                    Bdisp_DrawLineVRAM (box.left,box.bottom,box.right,box.bottom); 
    00000030 57F4                   MOV.L       @(16,R15),R7




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 21-Jul-2013 15:17:12  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000032 2F72                   MOV.L       R7,@R15
    00000034 56F3                   MOV.L       @(12,R15),R6
    00000036 6573                   MOV         R7,R5
    00000038 4E0B                   JSR         @R14
    0000003A 54F1                   MOV.L       @(4,R15),R4
      dConsole.c    27                    Bdisp_DrawLineVRAM (box.left,box.top,box.left,box.bottom); 
    0000003C 57F4                   MOV.L       @(16,R15),R7
    0000003E 56F1                   MOV.L       @(4,R15),R6
    00000040 2F62                   MOV.L       R6,@R15
    00000042 55F2                   MOV.L       @(8,R15),R5
    00000044 4E0B                   JSR         @R14
    00000046 6463                   MOV         R6,R4
      dConsole.c    28                    Bdisp_DrawLineVRAM (box.right,box.top,box.right,box.bottom); 
    00000048 57F4                   MOV.L       @(16,R15),R7
    0000004A 56F3                   MOV.L       @(12,R15),R6
    0000004C 2F62                   MOV.L       R6,@R15
    0000004E 55F2                   MOV.L       @(8,R15),R5
    00000050 4E0B                   JSR         @R14
    00000052 6463                   MOV         R6,R4
    00000054              L445:                             
      dConsole.c    29        } 
      dConsole.c    30    }
    00000054 7F14                   ADD         #20,R15
    00000056 4F26                   LDS.L       @R15+,PR
    00000058 000B                   RTS
    0000005A 6EF6                   MOV.L       @R15+,R14
      dConsole.c    31    
      dConsole.c    32    uint WaitKey ()
    0000005C              _WaitKey:                        ; function: WaitKey
                                                           ; frame size=8
    0000005C 4F22                   STS.L       PR,@-R15
    0000005E 7FFC                   ADD         #-4,R15
      dConsole.c    33    {
      dConsole.c    34            uint key;GetKey(&key);return key;
    00000060 D343                   MOV.L       L507+8,R3  ; _GetKey
    00000062 430B                   JSR         @R3
    00000064 64F3                   MOV         R15,R4
    00000066 60F2                   MOV.L       @R15,R0
      dConsole.c    35    }
    00000068 7F04                   ADD         #4,R15
    0000006A 4F26                   LDS.L       @R15+,PR
    0000006C 000B                   RTS
    0000006E 0009                   NOP
      dConsole.c    36    
      dConsole.c    37    char dGetKeyChar (uint key)
    00000070              _dGetKeyChar:                    ; function: dGetKeyChar
                                                           ; frame size=0
      dConsole.c    38    {
      dConsole.c    39            if (key>=KEY_CHAR_A && key<=KEY_CHAR_Z)
    00000070 E341                   MOV         #65,R3
    00000072 3432                   CMP/HS      R3,R4
    00000074 8B02                   BF          L447
    00000076 E15A                   MOV         #90,R1
    00000078 3416                   CMP/HI      R1,R4
    0000007A 8B05                   BF          L425
    0000007C              L447:                             
      dConsole.c    40                    return key;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 21-Jul-2013 15:17:12  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      dConsole.c    41    
      dConsole.c    42            else if (key>=KEY_CHAR_0 && key<= KEY_CHAR_9)
    0000007C E330                   MOV         #48,R3
    0000007E 3432                   CMP/HS      R3,R4
    00000080 8B04                   BF          L449
    00000082 E139                   MOV         #57,R1
    00000084 3416                   CMP/HI      R1,R4
    00000086 8901                   BT          L449
    00000088              L425:
      dConsole.c    43                    return key;
    00000088 000B                   RTS
    0000008A 6043                   MOV         R4,R0
    0000008C              L449:                             
      dConsole.c    44    
      dConsole.c    45            return 0;
    0000008C E000                   MOV         #0,R0
      dConsole.c    46    }
    0000008E              L448:                             
    0000008E 000B                   RTS
    00000090 0009                   NOP
      dConsole.c    47    
      dConsole.c    48    int dGetLineBox (char * s,int max,int width,int x,int y)
    00000092              _dGetLineBox:                    ; function: dGetLineBox
                                                           ; frame size=60
    00000092 2FE6                   MOV.L       R14,@-R15
    00000094 2FD6                   MOV.L       R13,@-R15
    00000096 2FC6                   MOV.L       R12,@-R15
    00000098 2FB6                   MOV.L       R11,@-R15
    0000009A 6C43                   MOV         R4,R12
      dConsole.c    49    {
      dConsole.c    50            int             pos = strlen(s);
    0000009C D335                   MOV.L       L507+12,R3 ; _strlen
    0000009E 2FA6                   MOV.L       R10,@-R15
    000000A0 2F96                   MOV.L       R9,@-R15
    000000A2 6A73                   MOV         R7,R10
    000000A4 2F86                   MOV.L       R8,@-R15
    000000A6 6863                   MOV         R6,R8
    000000A8 4F22                   STS.L       PR,@-R15
    000000AA 7FE8                   ADD         #-24,R15
    000000AC 1F53                   MOV.L       R5,@(12,R15)
    000000AE 430B                   JSR         @R3
    000000B0 64C3                   MOV         R12,R4
    000000B2 6E03                   MOV         R0,R14
    000000B4 52FE                   MOV.L       @(56,R15),R2
    000000B6 6383                   MOV         R8,R3
      dConsole.c    51            int             refresh = 1;
    000000B8 EB01                   MOV         #1,R11
    000000BA 720A                   ADD         #10,R2
    000000BC 1F25                   MOV.L       R2,@(20,R15)
    000000BE 73FF                   ADD         #-1,R3
    000000C0 1F32                   MOV.L       R3,@(8,R15)
    000000C2 61A3                   MOV         R10,R1
    000000C4 59FE                   MOV.L       @(56,R15),R9
    000000C6 7101                   ADD         #1,R1
    000000C8 1F11                   MOV.L       R1,@(4,R15)
    000000CA 7902                   ADD         #2,R9
    000000CC 52F2                   MOV.L       @(8,R15),R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 21-Jul-2013 15:17:12  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000CE 6023                   MOV         R2,R0
    000000D0 4200                   SHLL        R2
    000000D2 4008                   SHLL2       R0
    000000D4 320C                   ADD         R0,R2
    000000D6 32AC                   ADD         R10,R2
    000000D8 7201                   ADD         #1,R2
    000000DA 1F24                   MOV.L       R2,@(16,R15)
      dConsole.c    52            uint    key;
      dConsole.c    53            char    c;
      dConsole.c    54            
      dConsole.c    55            while(1)
    000000DC              L452:                             
      dConsole.c    56            {
      dConsole.c    57                    if (refresh)
    000000DC 2BB8                   TST         R11,R11
    000000DE 8D31                   BT/S        L453
    000000E0 ED00                   MOV         #0,R13
      dConsole.c    58                    {
      dConsole.c    59                            dAreaClear(x,y,x+width*6+2,y+10,2);
    000000E2 EB02                   MOV         #2,R11
    000000E4 2FB6                   MOV.L       R11,@-R15
    000000E6 6683                   MOV         R8,R6
    000000E8 57F6                   MOV.L       @(24,R15),R7
    000000EA 6383                   MOV         R8,R3
    000000EC 55FF                   MOV.L       @(60,R15),R5
    000000EE 4600                   SHLL        R6
    000000F0 4308                   SHLL2       R3
    000000F2 363C                   ADD         R3,R6
    000000F4 36AC                   ADD         R10,R6
    000000F6 7602                   ADD         #2,R6
    000000F8 BF82                   BSR         _dAreaClear
    000000FA 64A3                   MOV         R10,R4
      dConsole.c    60    
      dConsole.c    61                            if (pos<width-1)
    000000FC DB1E                   MOV.L       L507+16,R11; _PrintXY
    000000FE 7F04                   ADD         #4,R15
    00000100 52F2                   MOV.L       @(8,R15),R2
    00000102 3E23                   CMP/GE      R2,R14
    00000104 890F                   BT          L454
      dConsole.c    62                            {
      dConsole.c    63                                    PrintXY (x+1,y+2,(uchar*)s,0);
    00000106 E700                   MOV         #0,R7
    00000108 66C3                   MOV         R12,R6
    0000010A 6593                   MOV         R9,R5
    0000010C 4B0B                   JSR         @R11
    0000010E 54F1                   MOV.L       @(4,R15),R4
      dConsole.c    64                                    PrintXY (x+1+pos*6,y+2,(uchar*)"_",0);
    00000110 D61A                   MOV.L       L507+20,R6 ; L377
    00000112 6593                   MOV         R9,R5
    00000114 E700                   MOV         #0,R7
    00000116 64E3                   MOV         R14,R4
    00000118 63E3                   MOV         R14,R3
    0000011A 4400                   SHLL        R4
    0000011C 4308                   SHLL2       R3
    0000011E 343C                   ADD         R3,R4
    00000120 34AC                   ADD         R10,R4
    00000122 A00C                   BRA         L503




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 21-Jul-2013 15:17:12  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000124 7401                   ADD         #1,R4
    00000126              L454:                             
      dConsole.c    65                            }
      dConsole.c    66                            else
      dConsole.c    67                            {
      dConsole.c    68                                    PrintXY (x+1,y+2,(uchar*)(s+pos-width+1),0);
    00000126 E700                   MOV         #0,R7
    00000128 66E3                   MOV         R14,R6
    0000012A 3688                   SUB         R8,R6
    0000012C 36CC                   ADD         R12,R6
    0000012E 7601                   ADD         #1,R6
    00000130 6593                   MOV         R9,R5
    00000132 4B0B                   JSR         @R11
    00000134 54F1                   MOV.L       @(4,R15),R4
      dConsole.c    69                                    PrintXY (x+1+(width-1)*6,y+2,(uchar*)"_",0);
    00000136 E700                   MOV         #0,R7
    00000138 D610                   MOV.L       L507+20,R6 ; L377
    0000013A 6593                   MOV         R9,R5
    0000013C 54F4                   MOV.L       @(16,R15),R4
    0000013E              L503:                             
    0000013E 4B0B                   JSR         @R11
    00000140 0009                   NOP
      dConsole.c    70                            }
      dConsole.c    71                            refresh = 0;
    00000142 6BD3                   MOV         R13,R11
    00000144              L453:                             
      dConsole.c    72                    }
      dConsole.c    73    
      dConsole.c    74                    GetKey(&key);
    00000144 D30A                   MOV.L       L507+8,R3  ; _GetKey
    00000146 430B                   JSR         @R3
    00000148 64F3                   MOV         R15,R4
      dConsole.c    75    
      dConsole.c    76                    if ((c=dGetKeyChar(key))!=0)
    0000014A BF91                   BSR         _dGetKeyChar
    0000014C 64F2                   MOV.L       @R15,R4
    0000014E 6403                   MOV         R0,R4
    00000150 600E                   EXTS.B      R0,R0
    00000152 2008                   TST         R0,R0
    00000154 8914                   BT          L456
      dConsole.c    77                    {
      dConsole.c    78                            if (pos>=max) continue;
    00000156 53F3                   MOV.L       @(12,R15),R3
    00000158 3E33                   CMP/GE      R3,R14
    0000015A 89BF                   BT          L452
      dConsole.c    79    
      dConsole.c    80                            s[pos++] = c;s[pos] = '\0';
    0000015C 60E3                   MOV         R14,R0
    0000015E 7E01                   ADD         #1,R14
    00000160 0C44                   MOV.B       R4,@(R0,R12)
    00000162              L504:                             
    00000162 60E3                   MOV         R14,R0
    00000164 A01A                   BRA         L427
    00000166 0CD4                   MOV.B       R13,@(R0,R12)
    00000168              L507:                             
    00000168 <00000000>             .DATA.L     _Bdisp_AreaClr_VRAM
    0000016C <00000000>             .DATA.L     _Bdisp_DrawLineVRAM




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 21-Jul-2013 15:17:12  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000170 <00000000>             .DATA.L     _GetKey
    00000174 <00000000>             .DATA.L     _strlen
    00000178 <00000000>             .DATA.L     _PrintXY
    0000017C <00000000>             .DATA.L     L377
    00000180              L456:                             
      dConsole.c    81                            refresh = 1;
      dConsole.c    82                    }
      dConsole.c    83                    else
      dConsole.c    84                    {
      dConsole.c    85                            if (key==KEY_CTRL_DEL)
    00000180 9476                   MOV.W       L508,R4    ; H'7549
    00000182 63F2                   MOV.L       @R15,R3
    00000184 3340                   CMP/EQ      R4,R3
    00000186 8B03                   BF          L459
      dConsole.c    86                            {
      dConsole.c    87                                    if (pos<=0) continue;
    00000188 4E15                   CMP/PL      R14
    0000018A 8BA7                   BF          L452
    0000018C AFE9                   BRA         L504
      dConsole.c    88                                    s[--pos] = '\0';
    0000018E 7EFF                   ADD         #-1,R14
    00000190              L459:                             
      dConsole.c    89                                    refresh  = 1;
      dConsole.c    90                            }
      dConsole.c    91                            else if (key==KEY_CTRL_AC)
    00000190 946F                   MOV.W       L508+2,R4  ; H'753F
    00000192 63F2                   MOV.L       @R15,R3
    00000194 3340                   CMP/EQ      R4,R3
    00000196 8B03                   BF          L462
      dConsole.c    92                            {
      dConsole.c    93                                    *s              = 0;
    00000198 2CD0                   MOV.B       R13,@R12
      dConsole.c    94                                    pos             = 0;
    0000019A 6ED3                   MOV         R13,R14
    0000019C              L427:
      dConsole.c    95                                    refresh = 1;
    0000019C AF9E                   BRA         L452
    0000019E EB01                   MOV         #1,R11
    000001A0              L462:                             
      dConsole.c    96                            }
      dConsole.c    97                            else if (key==KEY_CTRL_EXE) return 1;
    000001A0 9468                   MOV.W       L508+4,R4  ; H'7534
    000001A2 62F2                   MOV.L       @R15,R2
    000001A4 3240                   CMP/EQ      R4,R2
    000001A6 8B01                   BF          L464
    000001A8 A005                   BRA         L465
    000001AA E001                   MOV         #1,R0
    000001AC              L464:                             
      dConsole.c    98                            else if (key==KEY_CTRL_EXIT) return 0;
    000001AC 9463                   MOV.W       L508+6,R4  ; H'7532
    000001AE 63F2                   MOV.L       @R15,R3
    000001B0 3340                   CMP/EQ      R4,R3
    000001B2 8B93                   BF          L452
    000001B4 E000                   MOV         #0,R0
    000001B6              L465:                             
      dConsole.c    99                            
      dConsole.c   100                    }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 21-Jul-2013 15:17:12  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      dConsole.c   101                    
      dConsole.c   102            }
      dConsole.c   103    }
    000001B6 7F18                   ADD         #24,R15
    000001B8 4F26                   LDS.L       @R15+,PR
    000001BA 68F6                   MOV.L       @R15+,R8
    000001BC 69F6                   MOV.L       @R15+,R9
    000001BE 6AF6                   MOV.L       @R15+,R10
    000001C0 6BF6                   MOV.L       @R15+,R11
    000001C2 6CF6                   MOV.L       @R15+,R12
    000001C4 6DF6                   MOV.L       @R15+,R13
    000001C6 000B                   RTS
    000001C8 6EF6                   MOV.L       @R15+,R14
      dConsole.c   104    
      dConsole.c   105    int dGetLine (int max,char * s) // This function is depended on dConsole
    000001CA              _dGetLine:                       ; function: dGetLine
                                                           ; frame size=60
    000001CA 2FE6                   MOV.L       R14,@-R15
    000001CC 2FD6                   MOV.L       R13,@-R15
    000001CE EE00                   MOV         #0,R14
      dConsole.c   106                                                                    // And this function is not allowed to abo
                         +lish
      dConsole.c   107    {
      dConsole.c   108            int             pos = strlen(s);
    000001D0 D329                   MOV.L       L508+8,R3  ; _strlen
    000001D2 2FC6                   MOV.L       R12,@-R15
    000001D4 2FB6                   MOV.L       R11,@-R15
    000001D6 6B53                   MOV         R5,R11
    000001D8 2FA6                   MOV.L       R10,@-R15
    000001DA 2F96                   MOV.L       R9,@-R15
    000001DC 2F86                   MOV.L       R8,@-R15
    000001DE 4F22                   STS.L       PR,@-R15
    000001E0 4F12                   STS.L       MACL,@-R15
    000001E2 7FE8                   ADD         #-24,R15
    000001E4 1F43                   MOV.L       R4,@(12,R15)
    000001E6 430B                   JSR         @R3
    000001E8 6453                   MOV         R5,R4
    000001EA 6D03                   MOV         R0,R13
      dConsole.c   109            int             refresh = 1;
      dConsole.c   110            int             x,y,l,width;
      dConsole.c   111            uint    key;
      dConsole.c   112            char    c;
      dConsole.c   113            
      dConsole.c   114            
      dConsole.c   115    
      dConsole.c   116            l = strlen (line_buf[line_index]);
    000001EC D123                   MOV.L       L508+12,R1 ; _line_index
    000001EE EC01                   MOV         #1,R12
    000001F0 D023                   MOV.L       L508+16,R0 ; _line_buf
    000001F2 E316                   MOV         #22,R3
    000001F4 6212                   MOV.L       @R1,R2
    000001F6 0237                   MUL.L       R3,R2
    000001F8 D21F                   MOV.L       L508+8,R2  ; _strlen
    000001FA 041A                   STS         MACL,R4
    000001FC 420B                   JSR         @R2
    000001FE 340C                   ADD         R0,R4
    00000200 6903                   MOV         R0,R9




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 21-Jul-2013 15:17:12  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      dConsole.c   117            
      dConsole.c   118            if (l>=LINE_COL_MAX)
    00000202 E315                   MOV         #21,R3
    00000204 3933                   CMP/GE      R3,R9
    00000206 8B04                   BF          L468
      dConsole.c   119            {
      dConsole.c   120                    dConsolePut("\n");
    00000208 D41E                   MOV.L       L508+20,R4 ; L395
    0000020A B0D2                   BSR         _dConsolePut
    0000020C 0009                   NOP
      dConsole.c   121                    l = 0;
    0000020E A002                   BRA         L469
    00000210 69E3                   MOV         R14,R9
    00000212              L468:                             
      dConsole.c   122            }
      dConsole.c   123            else
      dConsole.c   124                    dConsoleRedraw();
    00000212 B084                   BSR         _dConsoleRedraw
    00000214 0009                   NOP
    00000216              L469:                             
      dConsole.c   125    
      dConsole.c   126            x = l + 1;
    00000216 6393                   MOV         R9,R3
      dConsole.c   127            y = line_count;
    00000218 D21B                   MOV.L       L508+24,R2 ; _line_count
      dConsole.c   128            width = LINE_COL_MAX - l;
    0000021A E115                   MOV         #21,R1
    0000021C 7301                   ADD         #1,R3
    0000021E 3198                   SUB         R9,R1
    00000220 1F31                   MOV.L       R3,@(4,R15)
    00000222 6A22                   MOV.L       @R2,R10
    00000224 1F12                   MOV.L       R1,@(8,R15)
    00000226 71FF                   ADD         #-1,R1
    00000228 1F14                   MOV.L       R1,@(16,R15)
    0000022A 53F2                   MOV.L       @(8,R15),R3
    0000022C 51F1                   MOV.L       @(4,R15),R1
    0000022E 313C                   ADD         R3,R1
    00000230 71FF                   ADD         #-1,R1
    00000232 1F15                   MOV.L       R1,@(20,R15)
      dConsole.c   129    
      dConsole.c   130            while (1)
    00000234              L471:                             
      dConsole.c   131            {
      dConsole.c   132                    if (refresh)
    00000234 2CC8                   TST         R12,R12
    00000236 8940                   BT          L472
      dConsole.c   133                    {
      dConsole.c   134                            int i;
      dConsole.c   135                            for (i=x;i<=LINE_COL_MAX;++i)
    00000238 58F1                   MOV.L       @(4,R15),R8
    0000023A E315                   MOV         #21,R3
    0000023C D913                   MOV.L       L508+28,R9 ; _Print
    0000023E 3837                   CMP/GT      R3,R8
    00000240 DC13                   MOV.L       L508+32,R12; _locate
    00000242 8909                   BT          L473
    00000244              L474:                             
      dConsole.c   136                            {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 21-Jul-2013 15:17:12  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      dConsole.c   137                                    locate(i,y);Print((uchar*)" ");
    00000244 65A3                   MOV         R10,R5
    00000246 4C0B                   JSR         @R12
    00000248 6483                   MOV         R8,R4
    0000024A D412                   MOV.L       L508+36,R4 ; L400
    0000024C 490B                   JSR         @R9
    0000024E 0009                   NOP
    00000250 7801                   ADD         #1,R8
    00000252 E315                   MOV         #21,R3
    00000254 3837                   CMP/GT      R3,R8
    00000256 8BF5                   BF          L474
    00000258              L473:                             
      dConsole.c   138                            }
      dConsole.c   139                            if (pos<width-1)
    00000258 51F4                   MOV.L       @(16,R15),R1
    0000025A 3D13                   CMP/GE      R1,R13
    0000025C 891C                   BT          L475
      dConsole.c   140                            {
      dConsole.c   141                                    locate(x,y);            Print((uchar*)s);
    0000025E 65A3                   MOV         R10,R5
    00000260 4C0B                   JSR         @R12
    00000262 54F1                   MOV.L       @(4,R15),R4
    00000264 490B                   JSR         @R9
    00000266 64B3                   MOV         R11,R4
      dConsole.c   142                                    locate(x+pos,y);        Print((uchar*)"_");
    00000268 54F1                   MOV.L       @(4,R15),R4
    0000026A 65A3                   MOV         R10,R5
    0000026C A01F                   BRA         L505
    0000026E 34DC                   ADD         R13,R4
    00000270              L508:                             
    00000270 7549                   .DATA.W     H'7549
    00000272 753F                   .DATA.W     H'753F
    00000274 7534                   .DATA.W     H'7534
    00000276 7532                   .DATA.W     H'7532
    00000278 <00000000>             .DATA.L     _strlen
    0000027C <00000000>             .DATA.L     _line_index
    00000280 <00000000>             .DATA.L     _line_buf
    00000284 <00000000>             .DATA.L     L395
    00000288 <00000000>             .DATA.L     _line_count
    0000028C <00000000>             .DATA.L     _Print
    00000290 <00000000>             .DATA.L     _locate
    00000294 <00000000>             .DATA.L     L400
    00000298              L475:                             
      dConsole.c   143                            }
      dConsole.c   144                            else
      dConsole.c   145                            {
      dConsole.c   146                                    locate(x,y);                    Print((uchar*)s+pos-width+1);
    00000298 65A3                   MOV         R10,R5
    0000029A 4C0B                   JSR         @R12
    0000029C 54F1                   MOV.L       @(4,R15),R4
    0000029E 64D3                   MOV         R13,R4
    000002A0 53F2                   MOV.L       @(8,R15),R3
    000002A2 3438                   SUB         R3,R4
    000002A4 34BC                   ADD         R11,R4
    000002A6 490B                   JSR         @R9
    000002A8 7401                   ADD         #1,R4
      dConsole.c   147                                    locate(x+width-1,y);    Print((uchar*)"_");




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 21-Jul-2013 15:17:12  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002AA 65A3                   MOV         R10,R5
    000002AC 54F5                   MOV.L       @(20,R15),R4
    000002AE              L505:                             
    000002AE 4C0B                   JSR         @R12
    000002B0 0009                   NOP
    000002B2 D435                   MOV.L       L509+6,R4  ; L377
    000002B4 490B                   JSR         @R9
    000002B6 0009                   NOP
      dConsole.c   148                            }
      dConsole.c   149                            refresh = 0;
    000002B8 6CE3                   MOV         R14,R12
    000002BA              L472:                             
      dConsole.c   150                    }
      dConsole.c   151                    GetKey(&key);
    000002BA D934                   MOV.L       L509+10,R9 ; _GetKey
    000002BC 490B                   JSR         @R9
    000002BE 64F3                   MOV         R15,R4
      dConsole.c   152                    if ((c=dGetKeyChar(key))!=0)
    000002C0 BED6                   BSR         _dGetKeyChar
    000002C2 64F2                   MOV.L       @R15,R4
    000002C4 6403                   MOV         R0,R4
    000002C6 600E                   EXTS.B      R0,R0
    000002C8 2008                   TST         R0,R0
    000002CA 8906                   BT          L477
      dConsole.c   153                    {
      dConsole.c   154                            if (pos>=max) continue;
    000002CC 53F3                   MOV.L       @(12,R15),R3
    000002CE 3D33                   CMP/GE      R3,R13
    000002D0 89B0                   BT          L471
      dConsole.c   155    
      dConsole.c   156                            s[pos++] = c;s[pos] = '\0';
    000002D2 60D3                   MOV         R13,R0
    000002D4 7D01                   ADD         #1,R13
    000002D6 A007                   BRA         L506
    000002D8 0B44                   MOV.B       R4,@(R0,R11)
    000002DA              L477:                             
      dConsole.c   157                            refresh = 1;
      dConsole.c   158                    }
      dConsole.c   159                    else
      dConsole.c   160                    {
      dConsole.c   161                            if (key==KEY_CTRL_DEL)
    000002DA 9452                   MOV.W       L509,R4    ; H'7549
    000002DC 63F2                   MOV.L       @R15,R3
    000002DE 3340                   CMP/EQ      R4,R3
    000002E0 8B05                   BF          L480
      dConsole.c   162                            {
      dConsole.c   163                                    if (pos<=0) continue;
    000002E2 4D15                   CMP/PL      R13
    000002E4 8BA6                   BF          L471
      dConsole.c   164                                    s[--pos] = '\0';
    000002E6 7DFF                   ADD         #-1,R13
    000002E8              L506:                             
    000002E8 60D3                   MOV         R13,R0
    000002EA A006                   BRA         L431
    000002EC 0BE4                   MOV.B       R14,@(R0,R11)
    000002EE              L480:                             
      dConsole.c   165                                    refresh  = 1;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 21-Jul-2013 15:17:12  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      dConsole.c   166                            }
      dConsole.c   167                            else if (key==KEY_CTRL_AC)
    000002EE 9449                   MOV.W       L509+2,R4  ; H'753F
    000002F0 63F2                   MOV.L       @R15,R3
    000002F2 3340                   CMP/EQ      R4,R3
    000002F4 8B03                   BF          L483
      dConsole.c   168                            {
      dConsole.c   169                                    *s              = 0;
      dConsole.c   170                                    pos             = 0;
    000002F6 6DE3                   MOV         R14,R13
    000002F8 2BE0                   MOV.B       R14,@R11
    000002FA              L431:
      dConsole.c   171                                    refresh = 1;
    000002FA AF9B                   BRA         L471
    000002FC EC01                   MOV         #1,R12
    000002FE              L483:                             
      dConsole.c   172                            }
      dConsole.c   173                            else if (key==KEY_CTRL_EXE) return 1;
    000002FE 9442                   MOV.W       L509+4,R4  ; H'7534
    00000300 62F2                   MOV.L       @R15,R2
    00000302 3240                   CMP/EQ      R4,R2
    00000304 8B96                   BF          L471
    00000306 E001                   MOV         #1,R0
      dConsole.c   174                            
      dConsole.c   175                    }
      dConsole.c   176            }
      dConsole.c   177            return 0;
      dConsole.c   178    }
    00000308 7F18                   ADD         #24,R15
    0000030A 4F16                   LDS.L       @R15+,MACL
    0000030C 4F26                   LDS.L       @R15+,PR
    0000030E 68F6                   MOV.L       @R15+,R8
    00000310 69F6                   MOV.L       @R15+,R9
    00000312 6AF6                   MOV.L       @R15+,R10
    00000314 6BF6                   MOV.L       @R15+,R11
    00000316 6CF6                   MOV.L       @R15+,R12
    00000318 6DF6                   MOV.L       @R15+,R13
    0000031A 000B                   RTS
    0000031C 6EF6                   MOV.L       @R15+,R14
      dConsole.c   179    
      dConsole.c   180    void dConsoleRedraw ()
    0000031E              _dConsoleRedraw:                 ; function: dConsoleRedraw
                                                           ; frame size=36
    0000031E 2FE6                   MOV.L       R14,@-R15
    00000320 2FD6                   MOV.L       R13,@-R15
    00000322 2FC6                   MOV.L       R12,@-R15
    00000324 2FB6                   MOV.L       R11,@-R15
    00000326 2FA6                   MOV.L       R10,@-R15
    00000328 2F96                   MOV.L       R9,@-R15
    0000032A 2F86                   MOV.L       R8,@-R15
    0000032C 4F22                   STS.L       PR,@-R15
    0000032E 4F12                   STS.L       MACL,@-R15
      dConsole.c   181    {
      dConsole.c   182            int i,j;
      dConsole.c   183            Bdisp_AllClr_VRAM();
    00000330 D317                   MOV.L       L509+14,R3 ; _Bdisp_AllClr_VRAM
    00000332 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 21-Jul-2013 15:17:12  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000334 0009                   NOP
      dConsole.c   184            for(i=0,j=line_start;i<line_count;++i)
    00000336 EB00                   MOV         #0,R11
    00000338 D216                   MOV.L       L509+18,R2 ; _line_start
    0000033A E916                   MOV         #22,R9
    0000033C D816                   MOV.L       L509+22,R8 ; _locate
    0000033E EA08                   MOV         #8,R10
    00000340 6E22                   MOV.L       @R2,R14
    00000342 6CB3                   MOV         R11,R12
    00000344 A00F                   BRA         L487
    00000346 ED01                   MOV         #1,R13
    00000348              L488:                             
      dConsole.c   185            {
      dConsole.c   186                    locate(1,i+1);Print((uchar*)line_buf[j]);
    00000348 65D3                   MOV         R13,R5
    0000034A 480B                   JSR         @R8
    0000034C E401                   MOV         #1,R4
    0000034E 0E97                   MUL.L       R9,R14
    00000350 D312                   MOV.L       L509+26,R3 ; _line_buf
    00000352 041A                   STS         MACL,R4
    00000354 D212                   MOV.L       L509+30,R2 ; _Print
    00000356 420B                   JSR         @R2
    00000358 343C                   ADD         R3,R4
      dConsole.c   187                    if (++j>=LINE_ROW_MAX) j = 0;
    0000035A 7E01                   ADD         #1,R14
    0000035C 3EA3                   CMP/GE      R10,R14
    0000035E 8F01                   BF/S        L489
    00000360 7C01                   ADD         #1,R12
    00000362 6EB3                   MOV         R11,R14
    00000364              L489:                             
    00000364 7D01                   ADD         #1,R13
    00000366              L487:                             
    00000366 D30F                   MOV.L       L509+34,R3 ; _line_count
    00000368 6232                   MOV.L       @R3,R2
    0000036A 3C23                   CMP/GE      R2,R12
    0000036C 8BEC                   BF          L488
      dConsole.c   188            }
      dConsole.c   189    
      dConsole.c   190    }
    0000036E 4F16                   LDS.L       @R15+,MACL
    00000370 4F26                   LDS.L       @R15+,PR
    00000372 68F6                   MOV.L       @R15+,R8
    00000374 69F6                   MOV.L       @R15+,R9
    00000376 6AF6                   MOV.L       @R15+,R10
    00000378 6BF6                   MOV.L       @R15+,R11
    0000037A 6CF6                   MOV.L       @R15+,R12
    0000037C 6DF6                   MOV.L       @R15+,R13
    0000037E 000B                   RTS
    00000380 6EF6                   MOV.L       @R15+,R14
    00000382              L509:                             
    00000382 7549                   .DATA.W     H'7549
    00000384 753F                   .DATA.W     H'753F
    00000386 7534                   .DATA.W     H'7534
    00000388 <00000000>             .DATA.L     L377
    0000038C <00000000>             .DATA.L     _GetKey
    00000390 <00000000>             .DATA.L     _Bdisp_AllClr_VRAM
    00000394 <00000000>             .DATA.L     _line_start




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 21-Jul-2013 15:17:12  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000398 <00000000>             .DATA.L     _locate
    0000039C <00000000>             .DATA.L     _line_buf
    000003A0 <00000000>             .DATA.L     _Print
    000003A4 <00000000>             .DATA.L     _line_count
      dConsole.c   191    
      dConsole.c   192    void dConsolePuts (const char * str)
    000003A8              _dConsolePuts:                   ; function: dConsolePuts
                                                           ; frame size=4
    000003A8 4F22                   STS.L       PR,@-R15
      dConsole.c   193    {
      dConsole.c   194            dConsolePut(str);
    000003AA B002                   BSR         _dConsolePut
    000003AC 0009                   NOP
      dConsole.c   195            dConsolePut("\n");
    000003AE D441                   MOV.L       L510+6,R4  ; L395
    000003B0 4F26                   LDS.L       @R15+,PR
      dConsole.c   196    }
      dConsole.c   197    
      dConsole.c   198    void dConsolePut(const char * str)
    000003B2              _dConsolePut:                    ; function: dConsolePut
                                                           ; frame size=28
    000003B2 2FE6                   MOV.L       R14,@-R15
    000003B4 2FD6                   MOV.L       R13,@-R15
    000003B6 2FC6                   MOV.L       R12,@-R15
    000003B8 2FB6                   MOV.L       R11,@-R15
    000003BA 2FA6                   MOV.L       R10,@-R15
    000003BC 2F96                   MOV.L       R9,@-R15
    000003BE 4F12                   STS.L       MACL,@-R15
      dConsole.c   199    {
      dConsole.c   200            if (line_count == 0) line_count = 1;
    000003C0 DB3D                   MOV.L       L510+10,R11; _line_count
    000003C2 63B2                   MOV.L       @R11,R3
    000003C4 2338                   TST         R3,R3
    000003C6 8F02                   BF/S        L490
    000003C8 E915                   MOV         #21,R9
    000003CA E301                   MOV         #1,R3
    000003CC 2B32                   MOV.L       R3,@R11
    000003CE              L490:                             
    000003CE ED08                   MOV         #8,R13
    000003D0 D63C                   MOV.L       L510+22,R6 ; _line_x
    000003D2 EE16                   MOV         #22,R14
    000003D4 D53C                   MOV.L       L510+26,R5 ; _line_index
    000003D6 DA39                   MOV.L       L510+14,R10; _line_buf
    000003D8 DC39                   MOV.L       L510+18,R12; _line_start
      dConsole.c   201            for (;*str;++str)
    000003DA A036                   BRA         L491
    000003DC E700                   MOV         #0,R7
    000003DE              L492:                             
      dConsole.c   202            {
      dConsole.c   203                    if (*str != '\n')
    000003DE 6040                   MOV.B       @R4,R0
    000003E0 880A                   CMP/EQ      #10,R0
    000003E2 890B                   BT          L493
      dConsole.c   204                            line_buf[line_index][line_x++] = *str;
    000003E4 6052                   MOV.L       @R5,R0
    000003E6 00E7                   MUL.L       R14,R0
    000003E8 6362                   MOV.L       @R6,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 21-Jul-2013 15:17:12  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000003EA 001A                   STS         MACL,R0
    000003EC 30AC                   ADD         R10,R0
    000003EE 7301                   ADD         #1,R3
    000003F0 2632                   MOV.L       R3,@R6
    000003F2 73FF                   ADD         #-1,R3
    000003F4 6240                   MOV.B       @R4,R2
    000003F6 0324                   MOV.B       R2,@(R0,R3)
    000003F8 A007                   BRA         L494
    000003FA 0009                   NOP
    000003FC              L493:                             
      dConsole.c   205                    else
      dConsole.c   206                    {
      dConsole.c   207                            line_buf[line_index][line_x] = '\0';
    000003FC 6052                   MOV.L       @R5,R0
    000003FE 00E7                   MUL.L       R14,R0
    00000400 6362                   MOV.L       @R6,R3
    00000402 001A                   STS         MACL,R0
    00000404 30AC                   ADD         R10,R0
    00000406 0374                   MOV.B       R7,@(R0,R3)
      dConsole.c   208                            line_x = LINE_COL_MAX;
    00000408 2692                   MOV.L       R9,@R6
    0000040A              L494:                             
      dConsole.c   209                    }
      dConsole.c   210                    if (line_x>=LINE_COL_MAX)
    0000040A 6262                   MOV.L       @R6,R2
    0000040C 3293                   CMP/GE      R9,R2
    0000040E 8B1B                   BF          L495
      dConsole.c   211                    {
      dConsole.c   212                            line_buf[line_index][line_x] = '\0';
    00000410 6052                   MOV.L       @R5,R0
    00000412 00E7                   MUL.L       R14,R0
    00000414 6362                   MOV.L       @R6,R3
    00000416 001A                   STS         MACL,R0
    00000418 30AC                   ADD         R10,R0
    0000041A 0374                   MOV.B       R7,@(R0,R3)
      dConsole.c   213    
      dConsole.c   214                            line_x = 0;
    0000041C 2672                   MOV.L       R7,@R6
      dConsole.c   215                            if (line_count<LINE_ROW_MAX)
    0000041E 62B2                   MOV.L       @R11,R2
    00000420 32D3                   CMP/GE      R13,R2
    00000422 8903                   BT          L496
      dConsole.c   216                            {
      dConsole.c   217                                    ++line_count;
    00000424 61B2                   MOV.L       @R11,R1
    00000426 7101                   ADD         #1,R1
    00000428 A007                   BRA         L497
    0000042A 2B12                   MOV.L       R1,@R11
    0000042C              L496:                             
      dConsole.c   218                            }
      dConsole.c   219                            else
      dConsole.c   220                            {
      dConsole.c   221                                    line_start++;
    0000042C 62C2                   MOV.L       @R12,R2
    0000042E 7201                   ADD         #1,R2
    00000430 2C22                   MOV.L       R2,@R12
      dConsole.c   222                                    if (line_start>=LINE_ROW_MAX) line_start = 0;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 21-Jul-2013 15:17:12  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000432 6323                   MOV         R2,R3
    00000434 33D3                   CMP/GE      R13,R3
    00000436 8B00                   BF          L497
    00000438 2C72                   MOV.L       R7,@R12
    0000043A              L497:                             
      dConsole.c   223                            }
      dConsole.c   224                            line_index++;
    0000043A 6352                   MOV.L       @R5,R3
    0000043C 7301                   ADD         #1,R3
      dConsole.c   225                            if (line_index>=LINE_ROW_MAX) line_index = 0;
    0000043E 6233                   MOV         R3,R2
    00000440 2532                   MOV.L       R3,@R5
    00000442 32D3                   CMP/GE      R13,R2
    00000444 8B00                   BF          L495
    00000446 2572                   MOV.L       R7,@R5
    00000448              L495:                             
    00000448 7401                   ADD         #1,R4
    0000044A              L491:                             
    0000044A 6240                   MOV.B       @R4,R2
    0000044C 2228                   TST         R2,R2
    0000044E 8BC6                   BF          L492
      dConsole.c   226                    }
      dConsole.c   227            }
      dConsole.c   228            line_buf[line_index][line_x] = '\0';
    00000450 6052                   MOV.L       @R5,R0
    00000452 00E7                   MUL.L       R14,R0
    00000454 6362                   MOV.L       @R6,R3
    00000456 001A                   STS         MACL,R0
    00000458 30AC                   ADD         R10,R0
    0000045A 0374                   MOV.B       R7,@(R0,R3)
      dConsole.c   229            dConsoleRedraw();
    0000045C 4F16                   LDS.L       @R15+,MACL
    0000045E 69F6                   MOV.L       @R15+,R9
    00000460 6AF6                   MOV.L       @R15+,R10
    00000462 6BF6                   MOV.L       @R15+,R11
    00000464 6CF6                   MOV.L       @R15+,R12
    00000466 6DF6                   MOV.L       @R15+,R13
    00000468 AF59                   BRA         _dConsoleRedraw
    0000046A 6EF6                   MOV.L       @R15+,R14
      dConsole.c   230    }
      dConsole.c   231    
      dConsole.c   232    int dPrintf (const char * format,...)
    0000046C              _dPrintf:                        ; function: dPrintf
                                                           ; frame size=264
    0000046C 4F22                   STS.L       PR,@-R15
      dConsole.c   233    {
      dConsole.c   234            char    buf[256];
      dConsole.c   235            int             length;
      dConsole.c   236            va_list arg_list;
      dConsole.c   237    
      dConsole.c   238            va_start(arg_list,format);
    0000046E E503                   MOV         #3,R5
    00000470 901D                   MOV.W       L510,R0    ; H'FEFC
    00000472 3F0C                   ADD         R0,R15
    00000474 901C                   MOV.W       L510+2,R0  ; H'0108
    00000476 30FC                   ADD         R15,R0
    00000478 7004                   ADD         #4,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 21-Jul-2013 15:17:12  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000047A 2508                   TST         R0,R5
    0000047C 8903                   BT          L500
    0000047E 9517                   MOV.W       L510+2,R5  ; H'0108
    00000480 35FC                   ADD         R15,R5
    00000482 A003                   BRA         L501
    00000484 7508                   ADD         #8,R5
    00000486              L500:                             
    00000486 9513                   MOV.W       L510+2,R5  ; H'0108
    00000488 35FC                   ADD         R15,R5
    0000048A 7504                   ADD         #4,R5
    0000048C              L501:                             
      dConsole.c   239            length = vsprintf(buf,format,arg_list);
    0000048C 9010                   MOV.W       L510+2,R0  ; H'0108
    0000048E 64F3                   MOV         R15,R4
    00000490 D30E                   MOV.L       L510+30,R3 ; _vsprintf
    00000492 6653                   MOV         R5,R6
    00000494 05FE                   MOV.L       @(R0,R15),R5
    00000496 430B                   JSR         @R3
    00000498 7404                   ADD         #4,R4
      dConsole.c   240            va_end(arg_list);
      dConsole.c   241    
      dConsole.c   242            dConsolePut (buf);
    0000049A 64F3                   MOV         R15,R4
    0000049C 2F02                   MOV.L       R0,@R15
    0000049E BF88                   BSR         _dConsolePut
    000004A0 7404                   ADD         #4,R4
      dConsole.c   243    
      dConsole.c   244            return length;
    000004A2 60F2                   MOV.L       @R15,R0
      dConsole.c   245    }
    000004A4 9105                   MOV.W       L510+4,R1  ; H'0104
    000004A6 3F1C                   ADD         R1,R15
    000004A8 4F26                   LDS.L       @R15+,PR
    000004AA 000B                   RTS
    000004AC 0009                   NOP
    000004AE              L510:                             
    000004AE FEFC                   .DATA.W     H'FEFC
    000004B0 0108                   .DATA.W     H'0108
    000004B2 0104                   .DATA.W     H'0104
    000004B4 <00000000>             .DATA.L     L395
    000004B8 <00000000>             .DATA.L     _line_count
    000004BC <00000000>             .DATA.L     _line_buf
    000004C0 <00000000>             .DATA.L     _line_start
    000004C4 <00000000>             .DATA.L     _line_x
    000004C8 <00000000>             .DATA.L     _line_index
    000004CC <00000000>             .DATA.L     _vsprintf
      dConsole.c   246    
D   00000000              _line_index:                     ; static: line_index
    00000000 00000000               .DATA.L     H'00000000
    00000004              _line_x:                         ; static: line_x
    00000004 00000000               .DATA.L     H'00000000
    00000008              _line_start:                     ; static: line_start
    00000008 00000000               .DATA.L     H'00000000
    0000000C              _line_count:                     ; static: line_count
    0000000C 00000000               .DATA.L     H'00000000
C   00000000              L377:
    00000000 5F                     .SDATA      "_"




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 21-Jul-2013 15:17:12  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000001 00                     .DATA.B     H'00
    00000002 00000002               .RES.W      1
    00000004              L395:
    00000004 0A00                   .DATA.B     H'0A,H'00
    00000006 00000002               .RES.W      1
    00000008              L400:
    00000008 20                     .SDATA      " "
    00000009 00                     .DATA.B     H'00
B   00000000              _line_buf:                       ; static: line_buf
    00000000 000000B0               .RES.B      176



















































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 21-Jul-2013 15:17:12  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      246



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000004D0 Byte(s)
CONSTANT SECTION (C):                               0000000A Byte(s)
DATA     SECTION (D):                               00000010 Byte(s)
BSS      SECTION (B):                               000000B0 Byte(s)

 TOTAL PROGRAM SIZE: 0000059A Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:            9
NUMBER OF EXTERNAL DEFINITION SYMBOLS:          14
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            73






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmk5EC2.tmp 

